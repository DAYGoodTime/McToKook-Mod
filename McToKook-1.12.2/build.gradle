plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.xiaoACE'
version = '1.0'

java {
    archivesBaseName = 'McToKook'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {

    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                mctokook {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                mctokook {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    maven { url 'https://maven.fabricmc.net/' }
    maven { url 'https://maven.architectury.dev/' }
    maven { url 'https://jitpack.io' }

}

dependencies {

    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    implementation('com.github.SNWCreations:Kookbc:0.26.13')

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "mctokook",
                "Specification-Vendor"    : "xiaoACE",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "xiaoACE",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
    relocate('snw.kookbc','my.snw.kookbc')
    relocate('com.google.gson','my.com.google.gson')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jar.dependsOn(shadowJar)
